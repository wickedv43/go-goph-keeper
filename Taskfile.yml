version: '3'

tasks:

  build-win:
    desc: Сборка под Windows
    cmds:
      - GOOS=windows GOARCH=amd64 go build -o gk.exe ./cmd/client
      - GOOS=windows GOARCH=amd64 go build -o gk-server.exe ./cmd/server


  generate:
    go generate ./cmd/client/

  server:
    desc: Запуск сервачка
    cmds:
      - go run ./cmd/server/. -c=./config/config.server.yaml
  client:
    desc: Запуск клиентика
    cmds:
      - go run ./cmd/client/.


  mock:
    cmds:
      - mockgen -source=internal/storage/interface.go -destination=internal/mocks/mock_storage.go -package=mocks
      - mockgen -source=internal/service/interface.go -destination=internal/mocks/mock_service.go -package=mocks
      - mockgen -source=internal/api/server_grpc.pb.go -destination=cmd/client/internal/mocks/mock_gophkeeper.go -package=mocks GophKeeperClient
      - mockgen -source=cmd/client/internal/kv/interface.go -destination=cmd/client/internal/mocks/mock_storage.go -package=mocks


  test:
    cmds:
      - go test -v -coverpkg=./... -coverprofile=coverage.out -covermode=count ./...
      - go tool cover -func coverage.out

  docker:
    docker run --name my-postgres -e POSTGRES_USER=username -e POSTGRES_PASSWORD=password -e POSTGRES_DB=praktikum -p 5432:5432 -d postgres

  protoc:
    cmds:
      - go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest


  protoc-create:
    protoc -I=proto/ --go_out=./internal/api/ --go_opt=paths=source_relative --go-grpc_out=./internal/api/ --go-grpc_opt=paths=source_relative proto/*.proto
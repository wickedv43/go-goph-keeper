// Code generated by MockGen. DO NOT EDIT.
// Source: internal/api/server_grpc.pb.go
//
// Generated by this command:
//
//	mockgen -source=internal/api/server_grpc.pb.go -destination=cmd/client/internal/mocks/mock_gophkeeper.go -package=mocks GophKeeperClient
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	api "github.com/wickedv43/go-goph-keeper/internal/api"
	gomock "go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// MockGophKeeperClient is a mock of GophKeeperClient interface.
type MockGophKeeperClient struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperClientMockRecorder
	isgomock struct{}
}

// MockGophKeeperClientMockRecorder is the mock recorder for MockGophKeeperClient.
type MockGophKeeperClientMockRecorder struct {
	mock *MockGophKeeperClient
}

// NewMockGophKeeperClient creates a new mock instance.
func NewMockGophKeeperClient(ctrl *gomock.Controller) *MockGophKeeperClient {
	mock := &MockGophKeeperClient{ctrl: ctrl}
	mock.recorder = &MockGophKeeperClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperClient) EXPECT() *MockGophKeeperClientMockRecorder {
	return m.recorder
}

// CreateVault mocks base method.
func (m *MockGophKeeperClient) CreateVault(ctx context.Context, in *api.CreateVaultRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateVault", varargs...)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVault indicates an expected call of CreateVault.
func (mr *MockGophKeeperClientMockRecorder) CreateVault(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVault", reflect.TypeOf((*MockGophKeeperClient)(nil).CreateVault), varargs...)
}

// DeleteVault mocks base method.
func (m *MockGophKeeperClient) DeleteVault(ctx context.Context, in *api.DeleteVaultRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteVault", varargs...)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteVault indicates an expected call of DeleteVault.
func (mr *MockGophKeeperClientMockRecorder) DeleteVault(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVault", reflect.TypeOf((*MockGophKeeperClient)(nil).DeleteVault), varargs...)
}

// GetVault mocks base method.
func (m *MockGophKeeperClient) GetVault(ctx context.Context, in *api.GetVaultRequest, opts ...grpc.CallOption) (*api.VaultRecord, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetVault", varargs...)
	ret0, _ := ret[0].(*api.VaultRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVault indicates an expected call of GetVault.
func (mr *MockGophKeeperClientMockRecorder) GetVault(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVault", reflect.TypeOf((*MockGophKeeperClient)(nil).GetVault), varargs...)
}

// ListVaults mocks base method.
func (m *MockGophKeeperClient) ListVaults(ctx context.Context, in *api.ListVaultsRequest, opts ...grpc.CallOption) (*api.ListVaultsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListVaults", varargs...)
	ret0, _ := ret[0].(*api.ListVaultsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVaults indicates an expected call of ListVaults.
func (mr *MockGophKeeperClientMockRecorder) ListVaults(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVaults", reflect.TypeOf((*MockGophKeeperClient)(nil).ListVaults), varargs...)
}

// Login mocks base method.
func (m *MockGophKeeperClient) Login(ctx context.Context, in *api.LoginRequest, opts ...grpc.CallOption) (*api.LoginResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Login", varargs...)
	ret0, _ := ret[0].(*api.LoginResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockGophKeeperClientMockRecorder) Login(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockGophKeeperClient)(nil).Login), varargs...)
}

// Register mocks base method.
func (m *MockGophKeeperClient) Register(ctx context.Context, in *api.RegisterRequest, opts ...grpc.CallOption) (*api.RegisterResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Register", varargs...)
	ret0, _ := ret[0].(*api.RegisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockGophKeeperClientMockRecorder) Register(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockGophKeeperClient)(nil).Register), varargs...)
}

// UpdateVault mocks base method.
func (m *MockGophKeeperClient) UpdateVault(ctx context.Context, in *api.VaultRecord, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateVault", varargs...)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateVault indicates an expected call of UpdateVault.
func (mr *MockGophKeeperClientMockRecorder) UpdateVault(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVault", reflect.TypeOf((*MockGophKeeperClient)(nil).UpdateVault), varargs...)
}

// MockGophKeeperServer is a mock of GophKeeperServer interface.
type MockGophKeeperServer struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperServerMockRecorder
	isgomock struct{}
}

// MockGophKeeperServerMockRecorder is the mock recorder for MockGophKeeperServer.
type MockGophKeeperServerMockRecorder struct {
	mock *MockGophKeeperServer
}

// NewMockGophKeeperServer creates a new mock instance.
func NewMockGophKeeperServer(ctrl *gomock.Controller) *MockGophKeeperServer {
	mock := &MockGophKeeperServer{ctrl: ctrl}
	mock.recorder = &MockGophKeeperServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperServer) EXPECT() *MockGophKeeperServerMockRecorder {
	return m.recorder
}

// CreateVault mocks base method.
func (m *MockGophKeeperServer) CreateVault(arg0 context.Context, arg1 *api.CreateVaultRequest) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVault", arg0, arg1)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVault indicates an expected call of CreateVault.
func (mr *MockGophKeeperServerMockRecorder) CreateVault(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVault", reflect.TypeOf((*MockGophKeeperServer)(nil).CreateVault), arg0, arg1)
}

// DeleteVault mocks base method.
func (m *MockGophKeeperServer) DeleteVault(arg0 context.Context, arg1 *api.DeleteVaultRequest) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVault", arg0, arg1)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteVault indicates an expected call of DeleteVault.
func (mr *MockGophKeeperServerMockRecorder) DeleteVault(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVault", reflect.TypeOf((*MockGophKeeperServer)(nil).DeleteVault), arg0, arg1)
}

// GetVault mocks base method.
func (m *MockGophKeeperServer) GetVault(arg0 context.Context, arg1 *api.GetVaultRequest) (*api.VaultRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVault", arg0, arg1)
	ret0, _ := ret[0].(*api.VaultRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVault indicates an expected call of GetVault.
func (mr *MockGophKeeperServerMockRecorder) GetVault(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVault", reflect.TypeOf((*MockGophKeeperServer)(nil).GetVault), arg0, arg1)
}

// ListVaults mocks base method.
func (m *MockGophKeeperServer) ListVaults(arg0 context.Context, arg1 *api.ListVaultsRequest) (*api.ListVaultsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVaults", arg0, arg1)
	ret0, _ := ret[0].(*api.ListVaultsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVaults indicates an expected call of ListVaults.
func (mr *MockGophKeeperServerMockRecorder) ListVaults(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVaults", reflect.TypeOf((*MockGophKeeperServer)(nil).ListVaults), arg0, arg1)
}

// Login mocks base method.
func (m *MockGophKeeperServer) Login(arg0 context.Context, arg1 *api.LoginRequest) (*api.LoginResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", arg0, arg1)
	ret0, _ := ret[0].(*api.LoginResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockGophKeeperServerMockRecorder) Login(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockGophKeeperServer)(nil).Login), arg0, arg1)
}

// Register mocks base method.
func (m *MockGophKeeperServer) Register(arg0 context.Context, arg1 *api.RegisterRequest) (*api.RegisterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", arg0, arg1)
	ret0, _ := ret[0].(*api.RegisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockGophKeeperServerMockRecorder) Register(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockGophKeeperServer)(nil).Register), arg0, arg1)
}

// UpdateVault mocks base method.
func (m *MockGophKeeperServer) UpdateVault(arg0 context.Context, arg1 *api.VaultRecord) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVault", arg0, arg1)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateVault indicates an expected call of UpdateVault.
func (mr *MockGophKeeperServerMockRecorder) UpdateVault(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVault", reflect.TypeOf((*MockGophKeeperServer)(nil).UpdateVault), arg0, arg1)
}

// mustEmbedUnimplementedGophKeeperServer mocks base method.
func (m *MockGophKeeperServer) mustEmbedUnimplementedGophKeeperServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedGophKeeperServer")
}

// mustEmbedUnimplementedGophKeeperServer indicates an expected call of mustEmbedUnimplementedGophKeeperServer.
func (mr *MockGophKeeperServerMockRecorder) mustEmbedUnimplementedGophKeeperServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedGophKeeperServer", reflect.TypeOf((*MockGophKeeperServer)(nil).mustEmbedUnimplementedGophKeeperServer))
}

// MockUnsafeGophKeeperServer is a mock of UnsafeGophKeeperServer interface.
type MockUnsafeGophKeeperServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeGophKeeperServerMockRecorder
	isgomock struct{}
}

// MockUnsafeGophKeeperServerMockRecorder is the mock recorder for MockUnsafeGophKeeperServer.
type MockUnsafeGophKeeperServerMockRecorder struct {
	mock *MockUnsafeGophKeeperServer
}

// NewMockUnsafeGophKeeperServer creates a new mock instance.
func NewMockUnsafeGophKeeperServer(ctrl *gomock.Controller) *MockUnsafeGophKeeperServer {
	mock := &MockUnsafeGophKeeperServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeGophKeeperServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeGophKeeperServer) EXPECT() *MockUnsafeGophKeeperServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedGophKeeperServer mocks base method.
func (m *MockUnsafeGophKeeperServer) mustEmbedUnimplementedGophKeeperServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedGophKeeperServer")
}

// mustEmbedUnimplementedGophKeeperServer indicates an expected call of mustEmbedUnimplementedGophKeeperServer.
func (mr *MockUnsafeGophKeeperServerMockRecorder) mustEmbedUnimplementedGophKeeperServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedGophKeeperServer", reflect.TypeOf((*MockUnsafeGophKeeperServer)(nil).mustEmbedUnimplementedGophKeeperServer))
}
